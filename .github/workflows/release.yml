name: Release

on:
  release:
    types:
      - published

jobs:
  build:
    name: Build and sign artifacts
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@d171c3b028d844f2bf14e9fdec0c58114451e4bf

      - uses: actions/setup-python@7f80679172b057fc5e90d70d197929d454754a5a

      - name: deps
        run: python -m pip install -U build

      - name: build
        run: python -m build

      - name: sign
        run: |
          mkdir -p smoketest-artifacts
          # we smoke-test sigstore by installing each of the distributions
          # we've built in a fresh environment and using each to sign and
          # verify for itself, using the ambient OIDC identity
          for dist in dist/*; do
            dist_base="$(basename "${dist}")"
            python -m venv smoketest-env
            ./smoketest-env/bin/python -m pip install "${dist}"
            # NOTE: signing artifacts currently go in a separate directory,
            # to avoid confusing the package uploader (which otherwise tries
            # to upload them to PyPI and fails). Future versions of twine
            # and the gh-action-pypi-publish action should support these artifacts.
            ./smoketest-env/bin/python -m \
              sigstore sign "${dist}" \
              --output-signature smoketest-artifacts/"${dist_base}.sig" \
              --output-certificate smoketest-artifacts/"${dist_base}.crt"
            ./smoketest-env/bin/python -m \
              sigstore verify "${dist}" \
              --cert "smoketest-artifacts/${dist_base}.crt" \
              --signature "smoketest-artifacts/${dist_base}.sig" \
              --cert-oidc-issuer https://token.actions.githubusercontent.com \
            rm -rf smoketest-env
          done
      
      - name: Upload built packages
        uses: actions/upload-artifact@v3
        with:
          name: built-packages
          path: ./dist/
          if-no-files-found: warn

      - name: Upload smoketest-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: smoketest-artifacts
          path: smoketest-artifacts/
          if-no-files-found: warn

  release-pypi:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Download artifacts diretories # goes to current working directory
        uses: actions/download-artifact@v3
        with:
          name: built-packages

      - name: publish
        uses: pypa/gh-action-pypi-publish@717ba43cfbb0387f6ce311b169a825772f54d295
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages_dir: built-packages/

  release-github:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      # Needed to upload release assets.
      contents: write
    steps:
      - name: Download artifacts diretories # goes to current working directory
        uses: actions/download-artifact@v3

      - name: Upload artifacts to github
        # Confusingly, this action also supports updating releases, not
        # just creating them. This is what we want here, since we've manually
        # created the release that triggered the action.
        uses: softprops/action-gh-release@v1
        with:
          # smoketest-artifacts/ contains the signatures and certificates.
          files: |
            built-packages/*
            smoketest-artifacts/*
